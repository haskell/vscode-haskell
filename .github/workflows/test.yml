on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, ubuntu-latest, windows-latest]
        ghc: [9.0.2, 8.10.4]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 17
      - name: Upgrade ghcup
        run: ghcup upgrade -i -f
        shell: bash
      # Setup the environment for the tests
      - name: Install stack
        run: ghcup install stack recommended
      - name: Install cabal
        run: ghcup install cabal recommended
      - name: Install GHC
        run: ghcup install ghc ${{matrix.ghc}}
      - name: 'Install `tree` for MacOs'
        run: |
          brew update
          brew install tree
        if: runner.os == 'macOS'
      - name: 'Install `tree` for Windows'
        run: |
          choco install tree
        if: runner.os == 'Windows'
      # Pre-fetch HLS binaries before the tests because otherwise
      # we run into timeouts. Downloading takes longer, since we download
      # per HLS version one HLS binary per GHC version.
      - run: |
          mkdir -p test-workspace/bin/
          export GHCUP_INSTALL_BASE_PREFIX=$(pwd)/test-workspace/bin
          echo $XDG_BIN_HOME $GHCUP_INSTALL_BASE_PREFIX
          ghcup config set cache true
          ghcup --no-verbose prefetch hls 1.4.0
          ghcup --no-verbose prefetch hls latest
        shell: bash

      # Install test dependencies
      - run: yarn install --immutable --immutable-cache --check-cache
      - run: yarn run webpack

      # Run the tests
      - run: xvfb-run -s '-screen 0 640x480x16' -a yarn run test
        if: runner.os == 'Linux'
      - run: yarn run test
        if: runner.os != 'Linux'

      # Upload test artefacts
      - name: Upload log file to workflow artifacts on error
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: extension-${{ matrix.os }}.log
          path: test-workspace/hls.log

      # Create package artefacts
      - name: Delete test artefacts
        # The test-suite doesn't clean up correctly after itself.
        # This is a poor man's workaround that after test execution,
        # the test-workspace still contains binaries and caches.
        run: |
          tree -a test-workspace/
          rm -rf test-workspace/
        shell: bash
      - name: Package tested extension
        if: runner.os == 'Linux'
        run: npx vsce package
      - name: Upload extension vsix to workflow artifacts
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v3
        with:
          name: haskell-${{ github.sha }}.vsix
          path: haskell-*.vsix
